{
  "languages": [
    {
      "locale": "en",
      "enabled": true
    },
    {
      "locale": "sw",
      "enabled": true
    }
  ],
  "place_hierarchy_types": [
    "district_hospital",
    "health_center",
    "clinic",
    "person",
    "person_contact"
  ],
  "contact_types": [
    {
      "id": "district_hospital",
      "name_key": "contact.type.district_hospital",
      "group_key": "contact.type.district_hospital.plural",
      "create_key": "contact.type.district_hospital.new",
      "edit_key": "contact.type.place.edit",
      "icon": "icon-categories-outline-gray",
      "create_form": "form:contact:district_hospital:create",
      "edit_form": "form:contact:district_hospital:edit"
    },
    {
      "id": "health_center",
      "name_key": "contact.type.health_center",
      "group_key": "contact.type.health_center.plural",
      "create_key": "contact.type.health_center.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "district_hospital"
      ],
      "icon": "icon-maps-outline-gray",
      "create_form": "form:contact:health_center:create",
      "edit_form": "form:contact:health_center:edit"
    },
    {
      "id": "clinic",
      "name_key": "contact.type.clinic",
      "group_key": "contact.type.clinic.plural",
      "create_key": "contact.type.clinic.new",
      "edit_key": "contact.type.place.edit",
      "parents": [
        "health_center"
      ],
      "icon": "icon-hospital-solid-gray",
      "create_form": "form:contact:clinic:create",
      "edit_form": "form:contact:clinic:edit",
      "count_visits": true
    },
    {
      "id": "person",
      "name_key": "contact.type.person",
      "group_key": "contact.type.person.plural",
      "create_key": "contact.type.person.new",
      "edit_key": "contact.type.person.edit",
      "primary_contact_key": "clinic.field.contact",
      "parents": [
        "district_hospital",
        "health_center",
        "clinic"
      ],
      "icon": "icon-user-outline-gray",
      "create_form": "form:contact:person:create",
      "edit_form": "form:contact:person:edit",
      "person": true
    },
    {
      "id": "person_contact",
      "name_key": "contact.type.person_contact",
      "group_key": "contact.type.person_contact.plural",
      "create_key": "contact.type.person_contact.new",
      "edit_key": "contact.type.person_contact.edit",
      "primary_contact_key": "person.field.person_contact",
      "parents": [
        "person"
      ],
      "icon": "icon-contact-tracing-gray",
      "create_form": "form:contact:person_contact:create",
      "person": true
    }
  ],
  "roles": {
    "data_entry": {
      "name": "usertype.data-entry"
    },
    "analytics": {
      "name": "usertype.analytics"
    },
    "gateway": {
      "name": "usertype.gateway"
    },
    "program_officer": {
      "name": "usertype.program-officer"
    },
    "crfo": {
      "name": "usertype.crfo"
    },
    "chw_supervisor": {
      "name": "usertype.chw-supervisor",
      "offline": true
    },
    "chw": {
      "name": "usertype.chw",
      "offline": true
    }
  },
  "permissions": {
    "can_access_gateway_api": [
      "gateway"
    ],
    "can_bulk_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_configure": [
      "program_officer",
      "crfo"
    ],
    "can_create_people": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_records": [
      "data_entry",
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_create_users": [
      "program_officer"
    ],
    "can_delete_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_delete_users": [
      "program_officer"
    ],
    "can_edit": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_profile": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_edit_verification": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_all": [
      "program_officer",
      "crfo"
    ],
    "can_export_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_export_feedback": [
      "program_officer"
    ],
    "can_export_messages": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_log_out_on_android": [
      "chw_supervisor",
      "chw"
    ],
    "can_update_places": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_update_users": [
      "program_officer"
    ],
    "can_export_dhis": [
      "national_admin",
      "crfo"
    ],
    "can_verify_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics": [
      "analytics",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_analytics_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_call_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_contacts_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_last_visited_date": [],
    "can_view_uhc_stats": [],
    "can_view_message_action": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_messages_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_outgoing_messages": [
      "program_officer"
    ],
    "can_view_reports": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_reports_tab": [
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks_tab": [
      "chw_supervisor",
      "chw"
    ],
    "can_view_tasks_group": [
      "chw"
    ],
    "can_view_unallocated_data_records": [
      "gateway",
      "program_officer",
      "chw_supervisor",
      "chw"
    ],
    "can_view_users": [
      "program_officer"
    ],
    "can_write_wealth_quintiles": [],
    "can_aggregate_targets": [
      "chw_supervisor"
    ],
    "can_upgrade": [
      "program_officer"
    ],
    "can_view_old_filter_and_search": [],
    "can_view_old_action_bar": []
  },
  "forms": {},
  "schedules": [],
  "contact_summary": "var ContactSummary = {}; !function(e,t){if('object'==typeof exports&&'object'==typeof module)module.exports=t();else if('function'==typeof define&&define.amd)define([],t);else{var n=t();for(var r in n)('object'==typeof exports?exports:e)[r]=n[r]}}(ContactSummary,(function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(e,'__esModule',{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&'object'==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,'default',{enumerable:!0,value:e}),2&t&&'string'!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,'a',t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p='',n(n.s=0)}([function(e,t,n){var r=n(1),o=n(2);e.exports=o(r,contact,reports)},function(e,t){e.exports={fields:[],cards:[],context:{}}},function(e,t){function n(e){return e?Array.isArray(e)?e:[e]:[]}function r(e,t){switch(typeof e){case'undefined':return!0;case'function':return e(t);default:return e}}function o(e,t,n){if(r(e.appliesIf,n)){var o='function'==typeof e.fields?e.fields(n):e.fields.filter((function(e){return r(e.appliesIf,n)})).map((function(e){var t={};return i(e,t,'label'),i(e,t,'value'),i(e,t,'translate'),i(e,t,'filter'),i(e,t,'width'),i(e,t,'icon'),e.context&&(t.context={},i(e.context,t.context,'count'),i(e.context,t.context,'total')),t}));return e.modifyContext&&e.modifyContext(t,n),{label:e.label,fields:o}}function i(e,t,r){switch(typeof e[r]){case'undefined':return;case'function':t[r]=e[r](n);break;default:t[r]=e[r]}}}e.exports=function(e,t,r){var i=e.fields||[],f=e.context||{},u=e.cards||[],c=t&&('contact'===t.type?t.contact_type:t.type),l={cards:[],fields:i.filter((function(e){var t=n(e.appliesToType),r=t.filter((function(e){return e&&'!'===e.charAt(0)}));if((0===t.length||t.includes(c)||r.length>0&&!r.includes('!'+c))&&(!e.appliesIf||e.appliesIf()))return delete e.appliesToType,delete e.appliesIf,!0}))};return u.forEach((function(e){var t,i,u,a,p=n(e.appliesToType);if(p.includes('report')&&p.length>1)throw new Error('You cannot set appliesToType to an array which includes the type \\'report\\' and another type.');if(p.includes('report'))for(t=0;t<r.length;++t)i=r[t],!(a=i)||a.errors&&a.errors.length||(u=o(e,f,i))&&l.cards.push(u);else{if(!p.includes(c)&&p.length>0)return;(u=o(e,f))&&l.cards.push(u)}})),l.context=f,l}}])})); return ContactSummary;",
  "tasks": {
    "rules": "define Target { _id: null, contact: null, deleted: null, type: null, pass: null, date: null, groupBy: null }\ndefine Contact { contact: null, reports: null, tasks: null }\ndefine Task { _id: null, deleted: null, doc: null, contact: null, icon: null, date: null, readyStart: null, readyEnd: null, title: null, fields: null, resolved: null, priority: null, priorityLabel: null, reports: null, actions: null }\nrule GenerateEvents {\n  when { c: Contact } then { !function(t){var e={};function n(a){if(e[a])return e[a].exports;var o=e[a]={i:a,l:!1,exports:{}};return t[a].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,a){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:a})},n.r=function(t){'undefined'!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:'Module'}),Object.defineProperty(t,'__esModule',{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&'object'==typeof t&&t&&t.__esModule)return t;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,'default',{enumerable:!0,value:t}),2&e&&'string'!=typeof t)for(var o in t)n.d(a,o,function(e){return t[e]}.bind(null,o));return a},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,'a',e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p='',n(n.s=1)}([function(t,e){t.exports=function(t){var e={};!function t(e,n){var a=Object.keys(e);for(var o in a){var r=a[o];switch(typeof e[r]){case'object':t(e[r],n);break;case'function':e[r]=e[r].bind(n)}}}(t,e),e.definition=function t(e){var n=Object.assign({},e),a=Object.keys(n);for(var o in a){var r=a[o];if(Array.isArray(n[r])){n[r]=n[r].slice(0);for(var i=0;i<n[r].length;++i)'object'==typeof n[r][i]&&(n[r][i]=t(n[r][i]))}else'object'==typeof n[r]&&(n[r]=t(n[r]))}return n}(t)}},function(t,e,n){var a=n(2),o=n(3),r=n(4);n(6)(o,c,Utils,Target,emit),r(a,c,Utils,Task,emit),emit('_complete',{_id:!0})},function(t,e){t.exports=[{name:'task_covid_case_investigation',title:'task.case_investigation_covid',icon:'icon-investigation-outline-gray',appliesTo:'contacts',appliesToType:['person'],actions:[{form:'covid19_case_investigation'}],events:[{start:14,days:14,end:0}],resolvedIf:function(t,e,n,a){return Utils.isFormSubmittedInWindow(t.reports,'covid19_case_investigation',Utils.addDate(a,-n.start).getTime(),Utils.addDate(a,n.end+1).getTime())}},{name:'task_cholera_case_investigation',title:'task.case_investigation_cholera',icon:'icon-investigation-outline-gray',appliesTo:'contacts',appliesToType:['person'],actions:[{form:'cholera_case_investigation'}],events:[{start:14,days:14,end:0}],resolvedIf:function(t,e,n,a){return Utils.isFormSubmittedInWindow(t.reports,'cholera_case_investigation',Utils.addDate(a,-n.start).getTime(),Utils.addDate(a,n.end+1).getTime())}},{name:'task_cholera_case_management',title:'task.case_management_cholera',icon:'icon-management-outline-blue',appliesTo:'contacts',appliesToType:['person'],appliesIf:function(t){return Utils.getMostRecentReport(t.reports,'cholera_case_investigation')},actions:[{form:'cholera_case_management'}],events:[{start:14,days:14,end:0}],resolvedIf:function(t,e,n,a){return Utils.isFormSubmittedInWindow(t.reports,'cholera_case_management',Utils.addDate(a,-n.start).getTime(),Utils.addDate(a,n.end+1).getTime())}},{name:'task_cholera_lab_report',title:'task.lab_form_cholera',icon:'icon-lab-outline-gray',appliesTo:'contacts',appliesIf:function(t){return Utils.getMostRecentReport(t.reports,'cholera_case_investigation')},appliesToType:['person'],actions:[{form:'cholera_lab_form'}],events:[{start:14,days:14,end:0}],resolvedIf:function(t,e,n,a){return Utils.isFormSubmittedInWindow(t.reports,'cholera_lab_form',Utils.addDate(a,-n.start).getTime(),Utils.addDate(a,n.end+1).getTime())}},{name:'task_contact_tracing',title:'task.contact_tracing',icon:'icon-person-tracing-gray',appliesTo:'contacts',appliesToType:['person_contact'],actions:[{form:'contact_tracing'}],events:[{start:14,days:14,end:0}],resolvedIf:function(t,e,n,a){return Utils.isFormSubmittedInWindow(t.reports,'contact_tracing',Utils.addDate(a,-n.start).getTime(),Utils.addDate(a,n.end+1).getTime())}}]},function(t,e){t.exports=[]},function(t,e,n){var a=n(0),o=n(5);function r(t,e,n,a,o,r){var i;if(t.appliesToType){var s;if('contacts'===t.appliesTo){if(!o.contact)return;s='contact'===o.contact.type?o.contact.contact_type:o.contact.type}else{if(!r)return;s=r.form}if(-1===t.appliesToType.indexOf(s))return}if('scheduled_tasks'===t.appliesTo||!t.appliesIf||t.appliesIf(o,r))if('scheduled_tasks'===t.appliesTo){if(r&&t.appliesIf){if(!r.scheduled_tasks)return;for(i=0;i<r.scheduled_tasks.length;i++)t.appliesIf(o,r,i)&&d(i)}}else d();function c(t,e,n){var a;return(a='function'==typeof t.contactLabel?t.contactLabel(e,n):t.contactLabel)?{name:a}:e.contact}function d(i){var s,d,p,f,u=null;for(s=0;s<t.events.length;s++){if((d=t.events[s]).dueDate)u=d.dueDate(d,o,r,i);else if(r)u=void 0!==i?new Date(e.addDate(new Date(r.scheduled_tasks[i].due),d.days)):new Date(e.addDate(new Date(r.reported_date),d.days));else if(d.dueDate)u=d.dueDate(d,o);else{var v=o.contact&&o.contact.reported_date?new Date(o.contact.reported_date):new Date;u=new Date(e.addDate(v,d.days))}e.isTimely(u,d)&&(f={_id:(r?r._id:o.contact&&o.contact._id)+'~'+(d.id||s)+'~'+t.name,deleted:!(!(o.contact&&o.contact.deleted||r)||!r.deleted),doc:o,contact:c(t,o,r),icon:t.icon,date:u,readyStart:d.start||0,readyEnd:d.end||0,title:t.title,resolved:t.resolvedIf(o,r,d,u,i),actions:l(t.actions,d)},void 0!==i&&(f._id+='-'+i),'function'==typeof(p=t.priority)&&(p=p(o,r)),p&&(f.priority=p.level,f.priorityLabel=p.label),a('task',new n(f)))}}function l(e,n){return t.actions.map((function(t){return function(t,e){var n={source:'task',source_id:r?r._id:o.contact&&o.contact._id,contact:o.contact};t.modifyContent&&t.modifyContent(n,o,r,e);return{type:t.type||'report',form:t.form,label:t.label||'Follow up',content:n}}(t,n)}))}}t.exports=function(t,e,n,i,s){if(t)for(var c,d,l=0;l<t.length;++l)switch('function'!=typeof(c=Object.assign({},t[l],o)).resolvedIf&&(c.resolvedIf=function(t,e,a,o){return c.defaultResolvedIf(t,e,a,o,n)}),a(c),c.appliesTo){case'reports':case'scheduled_tasks':for(var p=0;p<e.reports.length;++p)d=e.reports[p],r(c,n,i,s,e,d);break;case'contacts':e.contact&&r(c,n,i,s,e);break;default:throw new Error('Unrecognised task.appliesTo: '+c.appliesTo)}}},function(t,e){t.exports={defaultResolvedIf:function(t,e,n,a,o){var r,i;o||(o=Utils);var s=function(t){var e;if(!t||!t.actions)return;return(e=t.actions.find((function(t){return!t.type||'report'===t.type})))&&e.form}(this.definition);if(!s)throw new Error('Could not find the default resolving form!');return r=0,r=e?Math.max(o.addDate(a,-n.start).getTime(),e.reported_date+1):o.addDate(a,-n.start).getTime(),i=o.addDate(a,n.end+1).getTime(),o.isFormSubmittedInWindow(t.reports,s,r,i)}}},function(t,e,n){var a=n(0);function o(t,e,n,a,o,r){var i=!!r;if(o.contact){var s='contact'===o.contact.type?o.contact.contact_type:o.contact.type,c=i?r.form:s;if(!(t.appliesToType&&t.appliesToType.indexOf(c)<0)&&(!t.appliesIf||t.appliesIf(o,r)))for(var d=i?r:o.contact,l=function(t,e,n){var a;return a='function'==typeof t.idType?t.idType(e,n):'report'===t.idType?n&&n._id:e.contact&&e.contact._id,Array.isArray(a)||(a=[a]),a}(t,o,r),p=!t.passesIf||!!t.passesIf(o,r),f=function(t,e,n,a){if('function'==typeof t.date)return t.date(n,a)||e.now().getTime();if(void 0===t.date||null===t.date||'now'===t.date)return e.now().getTime();if('reported'===t.date)return a?a.reported_date:n.contact.reported_date;throw new Error('Unrecognised value for target.date: '+t.date)}(t,n,o,r),u=t.groupBy&&t.groupBy(o,r),v=0;v<l.length;++v){var _=new e({_id:l[v]+'~'+t.id,contact:o.contact,deleted:!!d.deleted,type:t.id,pass:p,groupBy:u,date:f});t.emitCustom?t.emitCustom(m,_,o,r):m(_)}}function m(t){a('target',t)}}t.exports=function(t,e,n,r,i){for(var s=0;s<t.length;++s){var c=t[s];switch(a(c),c.appliesTo){case'contacts':o(c,r,n,i,e);break;case'reports':for(var d=0;d<e.reports.length;++d){o(c,r,n,i,e,e.reports[d])}break;default:throw new Error('Unrecognised target.appliesTo: '+c.appliesTo)}}}}]); }\n}",
    "targets": {
      "enabled": true,
      "items": []
    }
  }
}
